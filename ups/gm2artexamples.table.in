File    = table
Product = @product@
#*************************************************
# Starting Group definition
Group:

Flavor     = ANY
Qualifiers = ""
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir '' ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")

Flavor     = ANY
Qualifiers = "@qualifier@"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir @qualifier@ ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")

Flavor     = ANY
Qualifiers = "@qualifier@:debug"
  Action = setup
       prodDir()
       setupEnv()
       setupRequired(cetbuildtools @CETBUILDTOOLS_VERSION@ @CETBUILDTOOLS_QUAL@)
       # faking out unsetup
       envSet( ${UPS_PROD_NAME_UC}_FQ, "" )
       execute( "get-directory-name subdir @qualifier@.debug ${UPS_PROD_FLAVOR}", UPS_ENV, ${UPS_PROD_NAME_UC}_FQ )
       fileTest( ${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ}, -d, "${UPS_PROD_DIR}/${${UPS_PROD_NAME_UC}_FQ} directory not found: SETUP ABORTED")
       exeActionRequired("setup__")

Common:
  Action = setup__
    envSet(${UPS_PROD_NAME_UC}_VERSION, @version@)
    prodDir( _FQ_DIR, ${${UPS_PROD_NAME_UC}_FQ} )

    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_INC,"") 
    execute( "find-path include ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_INC)
    # faking out unsetup
    envSet(${UPS_PROD_NAME_UC}_LIB,"") 
    execute( "find-path lib ${${UPS_PROD_NAME_UC}_FQ_DIR} ${UPS_PROD_DIR}", UPS_ENV, ${UPS_PROD_NAME_UC}_LIB)
    pathPrepend(LD_LIBRARY_PATH, ${${UPS_PROD_NAME_UC}_LIB})

    # add the bin directory to the path if it exists
    pathPrepend(PATH, ${UPS_PROD_DIR}/bin )
    pathPrepend(PATH, ${${UPS_PROD_NAME_UC}_FQ_DIR}/bin )
    # dropit -E removes non-existent directories
    Execute(dropit -E, NO_UPS_ENV, PATH)

    # uncomment or add to this list as relevant
    setupRequired(cmake)
    #setupRequired(boost @BOOST_VERS@ @BOOST_QUAL@)
    setupRequired(gcc @GCC_VERSION@ @GCC_QUAL@)

End:
# End Group definition
#*************************************************
